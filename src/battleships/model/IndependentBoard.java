/*
 * Copyright (c) 2015. Shen Yichen <2007.yichen@gmail.com
 * Under The MIT License.
 */

package battleships.model;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

/**
 * An implementation of Board that calculates probability independently for each {@code Ship}.
 * <p>
 * This board attempts to fit each ship into all possible configurations. The total number is tallied individually for
 * each ship. Total probability is summed up linearly, treating each ship's probability as independent.
 * <p>
 * P{A &#8746; B} = P{A} + P{B} - P{A &#8745; B}
 * <p>
 * Note that this will ignore the fact that a placing of a certain ship invalidates certain positions of another ship .
 * As such there are limitations to the accuracies of the probability derived.
 * <p>
 * Using only the ship placement count map generated by {@code getShipsMap()} would generally be preferred.
 *
 * @author Shen Yichen <2007.yichen@gmail.com>
 * @see Ship
 * @since v1.0.0
 */
public class IndependentBoard implements Board {

    private int width, height;
    private List<Ship> ships;
    /**
     * Creates a board with given width and height.
     *
     * @param width  The board width in squares
     * @param height The board height in squares
     */
    public IndependentBoard(int width, int height) {
        this.width = width;
        this.height = height;
        ships = new ArrayList<>();
    }

    @Override
    public int getWidth() {
        return width;
    }

    @Override
    public int getHeight() {
        return height;
    }

    @Override
    public double[][] getProbabilityMap() {
        return new double[0][];
    }

    @Override
    public double[][] getProbabilityMap(Ship ship) {
        return new double[0][];
    }

    @Override
    public int[][] getShipsMap() {
        return new int[0][];
    }

    @Override
    public int[][] getShipsMap(Ship ship) {
        return new int[0][];
    }

    @Override
    public void addShip(Ship ship) {
        ships.add(ship);
        genMap(ship);
    }

    @Override
    public Collection<Ship> getShips() {
        return null;
    }

    private void genMap(Ship ship){
       //TODO add map generation
    }
}
